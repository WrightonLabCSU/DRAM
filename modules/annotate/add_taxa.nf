process ADD_TAXA {

    errorStrategy 'finish'

    input:
    file( combined_annotations, stageAs: "input-raw-annotations.tsv" )
    file( ch_taxa )

    output:
    path("raw-annotations.tsv"), emit: annots_taxa_out, optional: true

    script:
    """
    #!/usr/bin/env python

    import pandas as pd

    # Load combined_annotations.tsv
    combined_annotations_path = "${combined_annotations}"
    combined_annotations = pd.read_csv(combined_annotations_path, sep='\t')

    # Load ch_taxa TSV
    ch_taxa_path = "${ch_taxa}"
    ch_taxa_data = pd.read_csv(ch_taxa_path, sep='\t')

    # Replace "." with "-" in the sample column for comparison
    combined_annotations["sample"] = combined_annotations["sample"].str.replace(".", "-")
    ch_taxa_data["user_genome"] = ch_taxa_data["user_genome"].str.replace(".", "-")

    # Merge ch_taxa data with combined_annotations
    merged_data = pd.merge(combined_annotations, ch_taxa_data[['user_genome', 'classification']], left_on="sample", right_on="user_genome", how="left")

    # Update 'taxonomy' column from ch_taxa_data if it's not present or entirely null in combined_annotations
    if 'taxonomy' not in combined_annotations.columns or combined_annotations['taxonomy'].isnull().all():
        merged_data['taxonomy'] = merged_data['classification']

    # Drop temporary columns generated by the merge
    merged_data.drop(columns=['user_genome', 'classification'], inplace=True, errors='ignore')

    # Ensure "rank" column is correctly preserved
    # This step might be redundant if the "rank" column is not modified above, but it ensures clarity.
    if 'rank' not in merged_data.columns and 'rank' in combined_annotations.columns:
        merged_data['rank'] = combined_annotations['rank']

    # Save the updated data to raw-annotations.tsv
    output_path = "raw-annotations.tsv"
    merged_data.to_csv(output_path, sep='\t', index=False)

    """
}