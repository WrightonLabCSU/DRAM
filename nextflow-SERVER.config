manifest {
    /* nextflow.config for DRAM2 in Nextflow */

    /* Homepage of project */
    homePage = 'https://github.com/BioRRW/DRAM2-NF'
    
    /* Author */
    author = 'Reed Woyda'

    /* Description of project */
    description = 'The purpose of this repo is to have fun building DRAM2 in Nextflow.'

    /* Main pipeline script */
    mainScript = 'DRAM2.nf'
    
    /* version */
    // No version yet
}

params {
    /* Help menu and version */
        help = 0
        h = 0
        v = 0
        version = 0

    /* SLURM options */
        slurm_queue = 'wrighton-hi,wrighton-low'
        slurm_node = "zenith"

    /* Number of threads */
        threads = 1

    /* Rename input fasta headers option */
        rename = 0

    /* Data type of input fasta */
        data_type = "genomic"

    /* sequence_type option for fasta: nuc or prot or nucleotide or protein */
        sequence_type = "n"

    /* Input Fasta Directory */
        fastas = "./input_fasta/*.f*"
        fasta_fmt = "*.f*"
        input_fasta = 0

        /* Input Called genes Directory */
        genes = "./input_fasta/*.f*"
        genes_fmt = "*.f*"
        input_genes = 0

    /* Default output directory */
        outdir = './DRAM2-NF_output'

    /* Call genes with prodigal */
        call = 0
        // prodigal mode either single or meta. 
        prodigal_mode = "single"
        // prodigal trans table options: [1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|23|24|25]
        prodigal_trans_table = "11"
        // prodigal format options: gbk, gff, or sco
        //This is not for use, we will always output gff and gbk
        prodigal_format = "gbk"

    /* Annotate options */
        annotate = 0 // annotate or not to annotate
        add_annotations = "empty"
        bit_score_threshold =  "1" // The minimum bit score is calculated by a HMMER or MMseqs search to retain hits.
        hmmsearch_threads = "2"


    /* Annotation database options */
        use_kegg = 0
        use_kofam = 0
        use_dbcan = 0
        use_camper = 0
        use_fegenie = 0
        use_methyl = 0
        use_cant_hyd = 0
        use_heme = 0
        use_sulfur = 0
        use_methyl = 0
        use_dbset = 0

    /* Annotation database locations */
        //kegg_mmseq_loc = ""
        kegg_mmseq_loc = ""
        kegg_index = ""
        
        kofam_db = "./databases/kofam/"
        kofam_db_info = "empty"
        kofam_top_hit = 'false'

        dbcan_db = "./databases/dbcan/"
        dbcan_fam_activities = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/databases/dbcan/CAZyDB.08062022.fam-activities.txt"
        dbcan_subfam_activities = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/databases/dbcan/CAZyDB.08062022.fam.subfam.ec.txt"
        dbcan_top_hit = 'true'


    /* Distill options */
        distill = 0
        add_module1 = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/test_data/distill_ecosystems/engineered_systems_dram2_ecosystem.tsv"
        add_module2 = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/test_data/distill_ecosystems/test_dram_module.tsv"
        add_module3 = "empty"
        add_module4 = "empty"
        add_module5 = "empty"


    /* Distill sheets */
        module_step_form = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/assets/forms/module_step_form.20220928.tsv"
        genome_summary_form = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/assets/forms/genome_summary_form.20220928.tsv"
        function_heatmap_form = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/assets/forms/function_heatmap_form.20220928.tsv"
        etc_module_database = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/assets/forms/etc_module_database.20220928.tsv"
        amg_database = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/assets/forms/amg_database.20220928.tsv"

    /* Supporing scripts TEMPORARY - will be put into containers */
    parse_hmmsearch_script = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/assets/parse_hmmsearch.py"
    kegg_formatter_script = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/assets/kegg_hmm_formatter.py"
    combine_annotations_script = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/assets/combine_annotations.py"
    count_annots_script = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/assets/count_annotations.py"
    distill_summary_script = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/assets/distill_summary.py"
    distill_final_script = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/assets/generate_multi_sheet_xlsx.py"
    dbcan_hmm_formatter_script = "/home/projects-wrighton-2/Pipeline_Development/DRAM2-Nextflow/DRAM2-NF/assets/dbcan_hmm_formatter.py"

    /* Merge Options */
    merge = 0

    /* Blend options */
    blend = 0

    /* Containers */
    main_container = "./containers/DRAM2-Nextflow-No-Databases-Nov302023-V1.sif"
    support_container = "./containers/Gene-Centric-Continer-v4.sif"
}

process {


    withName: RENAME_FASTA {
        container = "${params.support_container}"

        publishDir = [
            path: "${params.outdir}/Processed_inputs",
            mode: 'copy',
        ]

        executor="slurm"
        cpus = "1"
        time = '23h'
        memory = '100 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 2
    }

    withName: CALL_GENES {
        container = "${params.main_container}"

        publishDir = [
            path: "${params.outdir}/Prodigal_v2.6.3",
            mode: 'copy',
        ]

        executor="slurm"
        cpus = "${params.threads}"
        time = '23h'
        memory = '200 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 1
    }

    withName: INDEX {
        container = "${params.main_container}"

        /*
        publishDir = [
            path: "${params.outdir}/",
            mode: 'copy',
        ]
        */

        executor="slurm"
        cpus = "${params.threads}"
        time = '23h'
        memory = '200 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 1
    }   

    withName: MMSEQS2 {
        container = "${params.main_container}"

        /*
        publishDir = [
            path: "${params.outdir}/Prodigal_v2.6.3",
            mode: 'copy',
        ]
        */

        executor="slurm"
        cpus = "${params.threads}"
        time = '23h'
        memory = '200 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 1
    }    

    withName: HMM_SEARCH {
        container = "${params.main_container}"

        
        publishDir = [
            path: "${params.outdir}",
            mode: 'copy',
        ]
        

        executor="slurm"
        cpus = '2'
        time = '23h'
        memory = '200 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 8
    }

    withName: PARSE_HMM {
        container = "${params.main_container}"

        
        publishDir = [
            path: "${params.outdir}",
            mode: 'copy',
        ]
        

        executor="slurm"
        cpus = '1'
        time = '23h'
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 1
    }
    withName: KEGG_HMM_FORMATTER {
        container = "${params.main_container}"

        
        publishDir = [
            path: "${params.outdir}",
            mode: 'copy',
        ]
        

        executor="slurm"
        cpus = '1'
        time = '23h'
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 1
    }
    withName: KOFAM_HMM_FORMATTER {
        container = "${params.main_container}"

        
        publishDir = [
            path: "${params.outdir}",
            mode: 'copy',
        ]
        

        executor="slurm"
        cpus = '1'
        time = '23h'
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 1
    }
    withName: GENERIC_HMM_FORMATTER {
        //container = "${params.main_container}"

        
        publishDir = [
            path: "${params.outdir}",
            mode: 'copy',
        ]
        

        executor="slurm"
        cpus = '1'
        time = '23h'
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 1
    }
    withName: DBCAN_HMM_FORMATTER {
        container = "${params.main_container}"

        
        publishDir = [
            path: "${params.outdir}",
            mode: 'copy',
        ]
        

        executor="slurm"
        cpus = '1'
        time = '23h'
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 1
    }
    withName: COMBINE_ANNOTATIONS {
        container = "${params.main_container}"

        
        publishDir = [
            path: "${params.outdir}",
            mode: 'copy',
        ]
        

        executor="slurm"
        cpus = '1'
        time = '23h'
        memory = '2 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 1
    }
    withName: COUNT_ANNOTATIONS {
        container = "${params.main_container}"

        
        publishDir = [
            path: "${params.outdir}",
            mode: 'copy',
        ]
        

        executor="slurm"
        cpus = '1'
        time = '23h'
        memory = '2 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 1
    }
    withName: DISTILL_SUMMARY {
        container = "${params.main_container}"

        
        publishDir = [
            path: "${params.outdir}",
            mode: 'copy',
        ]
        

        executor="slurm"
        cpus = '1'
        time = '23h'
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 1
    }
    withName: DISTILL_FINAL {
        container = "${params.main_container}"

        
        publishDir = [
            path: "${params.outdir}",
            mode: 'copy',
        ]
        

        executor="slurm"
        cpus = '1'
        time = '23h'
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 1
    }
    withName: PRODUCT_HEATMAP {
        //container = "${params.main_container}"

        
        publishDir = [
            path: "${params.outdir}",
            mode: 'copy',
        ]
        

        executor="slurm"
        cpus = '1'
        time = '23h'
        memory = '2 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node}" : null

        maxForks = 1
    }
}

singularity {

    enabled = true
    singularity.enabled = true
    singularity.autoMounts = true

}


