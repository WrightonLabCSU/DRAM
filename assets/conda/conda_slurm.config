process {

    withName: RENAME_FASTA {
        publishDir = [
            path: "${params.outdir}/Processed_inputs",
            mode: 'copy',
        ]

        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = "1"
        time = "${params.time}"
        memory = '100 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-rename"

        maxForks = "${params.max_forks_single_cpu}"
    }

    withName: CALL_GENES {
        publishDir = [
            path: "${params.outdir}/Prodigal_v2.6.3",
            mode: 'copy',
        ]

        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = "1"
        time = "${params.time}"
        memory = '12 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-call"

        maxForks = "${params.max_forks_single_cpu}"
    }

    withName: QUAST {
        publishDir = [
            path: "${params.outdir}/QUAST_v5.2.0",
            mode: 'copy',
        ]

        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = "${params.threads}"
        time = "${params.time}"
        memory = '2 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-quast"

        maxForks = "${params.max_forks_single_cpu}"
    }

    withName: GENE_LOCS {
        publishDir = [
            path: "${params.outdir}/Processed_inputs",
            mode: 'copy',
        ]

        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = "1"
        time = "${params.time}"
        memory = '1 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-gene-locs"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: TRNA_SCAN {

        publishDir = [
            path: "${params.outdir}/tRNA_rRNA",
            mode: 'copy',
        ]

        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = "${params.threads}"
        time = "${params.time}"
        memory = '8 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-tRNA-scan"

        maxForks = "${params.max_forks_user_cpu}"
    }

    withName: RRNA_SCAN {
        publishDir = [
            path: "${params.outdir}/tRNA_rRNA",
            mode: 'copy',
        ]

        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = "${params.threads}"
        time = "${params.time}"
        memory = '8 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-rRNA-scan"

        maxForks = "${params.max_forks_user_cpu}"
    }

    withName: TRNA_COLLECT {
        publishDir = [
            path: "${params.outdir}/tRNA_rRNA",
            mode: 'copy',
        ]

        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = 1
        time = "${params.time}"
        memory = '1 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-tRNA-collect"

        maxForks = "${params.max_forks_single_cpu}"
    }

    withName: RRNA_COLLECT {
        publishDir = [
            path: "${params.outdir}/tRNA_rRNA",
            mode: 'copy',
        ]

        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = 1
        time = "${params.time}"
        memory = '200 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-rRNA-collect"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: MMSEQS_INDEX {

        publishDir = [
            path: "${params.outdir}/MMSEQS2",
            mode: 'copy',
        ]

        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '20 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-mmseqs-index"

        maxForks = "${params.max_forks_single_cpu}"
    }   

    withName: MMSEQS_SEARCH {
        publishDir = [
            path: "${params.outdir}/MMSEQS2",
            mode: 'copy',
        ]

        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = "${params.threads}"
        time = "${params.time}"
        memory = '200 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-mmseqs-search"

        maxForks = "${params.max_forks_user_cpu}"
    }  

    withName: ADD_SQL_DESCRIPTIONS {
        publishDir = [
            path: "${params.outdir}/MMSEQS2",
            mode: 'copy',
        ]

        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '100 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node} --job-name=DRAM2-add-sql-descriptions" : "--job-name=DRAM2-add-sql-descriptions"

        maxForks = "${params.max_forks_single_cpu}"
    }

    withName: HMM_SEARCH {
        publishDir = [
            path: "${params.outdir}/HMM_search",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '2'
        time = "${params.time}"
        memory = '32 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node} --job-name=DRAM2-hmm-search" : "--job-name=DRAM2-hmm-search"

        maxForks = "${params.max_forks_hmm}"
    }

    withName: PARSE_HMM {
        publishDir = [
            path: "${params.outdir}/HMM_search",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node} --job-name=DRAM2-parse-hmm" : "--job-name=DRAM2-parse-hmm"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: KEGG_HMM_FORMATTER {
        publishDir = [
            path: "${params.outdir}/HMM_search",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node} --job-name=DRAM2-hmm-kegg-format" : "--job-name=DRAM2-hmm-kegg-format"

        maxForks = "${params.max_forks_single_cpu}"
    }

    withName: KOFAM_HMM_FORMATTER {
        publishDir = [
            path: "${params.outdir}/HMM_search",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node} --job-name=DRAM2-hmm-kofam-format" : "--job-name=DRAM2-hmm-kofam-format"

        maxForks = "${params.max_forks_single_cpu}"
    }

    withName: CANTHYD_HMM_FORMATTER {

        publishDir = [
            path: "${params.outdir}/HMM_search",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node} --job-name=DRAM2-hmm-kcanthyd-format" : "--job-name=DRAM2-hmm-canthyd-format"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: VOG_HMM_FORMATTER {

        publishDir = [
            path: "${params.outdir}/HMM_search",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node} --job-name=DRAM2-hmm-vog-format" : "--job-name=DRAM2-hmm-vog-format"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: CAMPER_HMM_FORMATTER {

        publishDir = [
            path: "${params.outdir}/HMM_search",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node} --job-name=DRAM2-hmm-camper-format" : "--job-name=DRAM2-hmm-camper-format"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: SULFUR_HMM_FORMATTER {

        publishDir = [
            path: "${params.outdir}/HMM_search",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = params.slurm_node ? "--nodelist=${params.slurm_node} --job-name=DRAM2-hmm-sulfur-format" : "--job-name=DRAM2-hmm-sulfur-format"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: FEGENIE_HMM_FORMATTER {

        publishDir = [
            path: "${params.outdir}/HMM_search",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-hmm-fegenie-format"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: GENERIC_HMM_FORMATTER {
    

        publishDir = [
            path: "${params.outdir}/HMM_search",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-hmm-format"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: DBCAN_HMM_FORMATTER {

        publishDir = [
            path: "${params.outdir}/HMM_search",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-hmm-dbcan-format"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: COMBINE_ANNOTATIONS {
        
        publishDir = [
            path: "${params.outdir}/RAW",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = "${params.threads}"
        time = "${params.time}"
        memory = '2 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-combine-annotations"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: COUNT_ANNOTATIONS {

        
        publishDir = [
            path: "${params.outdir}/RAW",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '2 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-count-annotations"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: ADD_ANNOTATIONS {

        
        publishDir = [
            path: "${params.outdir}/RAW",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '2 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-add-annotations"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: MERGE_ANNOTATIONS {

        
        publishDir = [
            path: "${params.outdir}/RAW",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '2 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-merge-annotations"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: ADD_TAXA {

        
        publishDir = [
            path: "${params.outdir}/RAW",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '2 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-taxa"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: ADD_BIN_QUALITY {

        publishDir = [
            path: "${params.outdir}/RAW",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '2 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-bin-quality"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: GENERATE_GFF_GENBANK {

        publishDir = [
            path: "${params.outdir}/RAW",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-GFF-GBK"

        maxForks = '1'
    }
    withName: COMBINE_DISTILL {
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-distill-prep"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: DISTILL {

        publishDir = [
            path: "${params.outdir}/DISTILL",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = "${params.threads}"
        time = "${params.time}"
        memory = '200 MB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-distill-final"

        maxForks = "${params.max_forks_single_cpu}"
    }
    withName: PRODUCT_HEATMAP {
    

        publishDir = [
            path: "${params.outdir}",
            mode: 'copy',
        ]
        
        conda = './assets/conda/environment.yml'
        executor="slurm"
        cpus = '1'
        time = "${params.time}"
        memory = '2 GB'
        queue = "${params.slurm_queue}"
        clusterOptions = (params.slurm_node ? "--nodelist=${params.slurm_node} " : "") + "--job-name=DRAM2-product-heatmaps"

        maxForks = "${params.max_forks_single_cpu}"
    }
}