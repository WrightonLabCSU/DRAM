{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/WrightonLabCSU/dram/master/nextflow_schema.json",
    "title": "WrightonLabCSU/dram pipeline parameters",
    "description": "DRAM (Distilled and Refined Annotation of Metabolism) is a tool for annotating metagenomic assembled genomes",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "input_fasta": {
                    "type": "string",
                    "format": "path",
                    "exits": "true",
                    "description": "Path to FASTA directory",
                    "help_text": "This parameter is *mandatory*.",
                    "fa_icon": "fas fa-folder-open"
                },
                "fasta_fmt": {
                    "type": "string",
                    "default": "*.f*",
                    "description": "Input format for the FASTA file.",
                    "fa_icon": "fas fa-plus"
                },
                "input_genes": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory containing called genes. Only used when not running call. This allows you to provide pre-called genes to the pipeline."
                },
                "genes_fmt": {
                    "type": "string",
                    "default": "*.faa",
                    "description": "Input format for the Genes file.",
                    "fa_,icon": "fas fa-plus"
                },
                "genes_fna_fmt": {
                    "type": "string",
                    "default": "*.fna",
                    "description": "Input format for the Genes fna file. Only needed if you are not running call and you are passing `--generate_gff` or `--generate_gbk`.",
                    "fa_,icon": "fas fa-plus"
                },
                "merge_annotations": {
                    "type": "string",
                    "format": "path",
                    "exits": "true",
                    "description": "Path to directory pointing to DRAM annotation to merge into one file. To be ran as a separate process."
                }
            }

        },
        "call_prodigal_options": {
            "title": "Call Prodigal Options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Call genes on the input FASTA files using Prodigal.",
            "properties": {
                "call": {
                    "type": "boolean",
                    "description": "Whether to call genes on the input FASTA files using Prodigal."
                },
                "rename": {
                    "type": "boolean",
                    "description": "Rename FASTA headers based on file name. Example: sample1.fa --> (fasta header renamed to) > sample1......  Why? DRAM output is focused on scaffolds/contigs with respect to each provided input sample. Thus, without renaming FASTA headers, the individual scaffolds/contigs will not be distinguashable. *If you have already renamed your FASTA headers, do not include with '--call'."
                },
                "prodigal_mode": {
                    "type": "string",
                    "description": "Mode for Prodigal gene calling.",
                    "default": "single",
                    "enum": [
                        "single",
                        "meta"
                    ]
                },
                "prodigal_trans_table": {
                    "type": "number",
                    "description": "Translation table to use.",
                    "default": 11.0,
                    "enum": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ]
                },
                "min_contig_len": {
                    "type": "number",
                    "description": "Minimum contig length in base pairs.",
                    "default": 2500.0
                }
            },
            "dependentRequired": {
                "call": [
                    "input_fasta"
                ]
            }
        },
        "annotate_options": {
            "title": "Annotate Options",
            "type": "object",
            "fa_icon": "fas fa-database",
            "properties": {
                "annotate": {
                    "type": "boolean",
                    "description": "Annotate called genes using downloaded databases."
                },
                "use_camper": {
                    "type": "boolean",
                    "description": "Use the CAMPer database for annotation."
                },
                "use_canthyd": {
                    "type": "boolean",
                    "description": "Use the Cant_Hyd database for annotation."
                },
                "use_dbcan": {
                    "type": "boolean",
                    "description": "Use the DBCan database for annotation."
                },
                "use_fegenie": {
                    "type": "boolean",
                    "description": "Use the FeGenie database for annotation."
                },
                "use_kegg": {
                    "type": "boolean",
                    "description": "Use the KEGG database for annotation."
                },
                "use_kofam": {
                    "type": "boolean",
                    "description": "Use the Kofam database for annotation."
                },
                "use_merops": {
                    "type": "boolean",
                    "description": "Use the MEROPS database for annotation."
                },
                "use_methyl": {
                    "type": "boolean",
                    "description": "Use the Methyl database for annotation."
                },
                "use_pfam": {
                    "type": "boolean",
                    "description": "Use the PFAM database for annotation."
                },
                "use_sulfur": {
                    "type": "boolean",
                    "description": "Use the Sulfur database for annotation."
                },
                "use_uniref": {
                    "type": "boolean",
                    "description": "Use the UniRef database for annotation."
                },
                "add_annotations": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "description": "Path to old annotations to add to the current run."
                },
                "bit_score_threshold": {
                    "type": "number",
                    "description": "Minimum BitScore of search to retain hits')",
                    "default": 60.0
                },
                "rbh_bit_score_threshold": {
                    "type": "number",
                    "description": "Minimum BitScore of reverse best hits to retain hits",
                    "default": 350.0
                },
                "database_list": {
                    "type": "string",
                    "description": "Database list for generating GFF and GBK. Comma sepeterated list of databases to include in the annotates. Use empty for all. Example: 'kegg,dbcan,kofam,merops,viral,camper,cant_hyd,fegenie,sulfur,methyl,uniref,pfam,vogdb'",
                    "default": "empty"
                },
                "generate_gff": {
                    "type": "boolean",
                    "description": "Generate GFF output for each sample."
                },
                "generate_gbk": {
                    "type": "boolean",
                    "description": "Generate GBK output for each sample."
                }
            }
        },
        "distill_options": {
            "title": "Distill Options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "The purpose of DRAM distill is to distill down annotations based on curated distillation summary form(s). It can be ran with either --distill_topic, --distill_ecosystem, or --distill_custom (or some combination). User's may also provide a custom distillate via --distill_custom <path/to/file> (TSV forms). Distill can be ran independent of --call and --annotate however, annotations must be provided (--annotations <path/to/annotations.tsv>). Optional tRNA, rRNA and bin quality may also be provided.",
            "properties": {
                "distill_topic": {
                    "type": "string",
                    "description": "Topic to distill. Options:  <carbon|energy|misc|nitrogen|transport> OR <default = carbon,energy,misc,nitrogen,transport> If more than one topic included, they must be seperated by a comma (--distill_topic carbon,energy or --distill_topic 'carbon,energy')."  
                },
                "distill_ecosystem": {
                    "type": "string",
                    "description": "Ecosystem to distill. Options: <eng_sys|ag> If more than one ecosystem included, they must be seperated by a comma (--distill_ecosystem eng_sys,ag or --distill_ecosystem 'eng_sys,ag')."

                },
                "distill_custom": {
                    "type": "string",
                    "description": "<path/to/custom_distillate.tsv>  Custom distill file to use."
                },
                "annotations": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "description": "Path to annotations tsv to distill. Required if running without annotate"
                },
                "distill_carbon_sheet": {
                    "type": "string",
                    "hidden": true,
                    "description": "File path to distill carbon sheet."
                },
                "distill_energy_sheet": {
                    "type": "string",
                    "hidden": true,
                    "description": "File path to distill energy sheet."
                },
                "distill_misc_sheet": {
                    "type": "string",
                    "hidden": true,
                    "description": "File path to distill misc sheet."
                },
                "distill_nitrogen_sheet": {
                    "type": "string",
                    "hidden": true,
                    "description": "File path to distill nitrogen sheet."
                },
                "distill_transport_sheet": {
                    "type": "string",
                    "hidden": true,
                    "description": "File path to distill transport sheet."
                },
                "distill_camper_sheet": {
                    "type": "string",
                    "hidden": true,
                    "description": "File path to distill camper sheet."
                },
                "distill_eng_sys_sheet": {
                    "type": "string",
                    "hidden": true,
                    "description": "File path to distill energy ecosystem sheet."
                },
                "distill_ag_sheet": {
                    "type": "string",
                    "hidden": true,
                    "description": "File path to distill agriculture ecosystem sheet."
                },
                "distill_dummy_sheet": {
                    "type": "string",
                    "hidden": true,
                    "description": "File path to distill dummy sheet."
                }
            }
        },
        "rna_options": {
            "title": "RNA Options",
            "type": "object",
            "fa_icon": "fas fa-database",
            "description": "rRNA and tRNA input sheets, used when running DRAM distill without --call",
            "properties": {
                "rrnas": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "description": "Path to rRNA tsv."
                },
                "trnas": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "description": "Path to tRNA tsv."
                }
            }
        },
        "bin_and_taxa_options": {
            "title": "Bin Quality and Taxonomy Options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Paths to bin quality and taxonomy tsvs, used after annotate and before distill",
            "properties": {
                "bin_quality": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "description": "Path to bin quality tsv. CheckM and CheckM2 compatible."
                },
                "taxa": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "description": "Path to bin taxonomy tsv. Compatible with GTDB."
                }
            }
        },
        "database_options": {
            "title": "Database Options",
            "type": "object",
            "fa_icon": "fas fa-database",
            "description": "File paths to databases used in the workflow.",
            "properties": {

                "kegg_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/kegg/",
                    "hidden": true
                },
                "uniref_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/uniref/",
                    "hidden": true
                },
                "pfam_mmseq_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/pfam/mmseqs/",
                    "hidden": true

                },
                "merops_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/merops/",
                    "hidden": true
                },
                "viral_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/viral/",
                    "hidden": true
                },
                "kofam_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/kofam/",
                    "hidden": true
                },
                "kofam_list": {
                    "type": "string",
                    "default": "${launchDir}/databases/kofam/kofam_ko_list.tsv",
                    "hidden": true
                },
                "dbcan_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/dbcan/",
                    "hidden": true
                },
                "dbcan_fam_activities": {
                    "type": "string",
                    "default": "${launchDir}/databases/dbcan/dbcan.fam-activities.tsv",
                    "hidden": true
                },
                "dbcan_subfam_activities": {
                    "type": "string",
                    "default": "${launchDir}/databases/dbcan/dbcan.fam-activities.tsv",
                    "hidden": true
                },
                "vog_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/vog/",
                    "hidden": true
                },
                "vog_list": {
                    "type": "string",
                    "default": "${launchDir}/databases/vogdb/vog_annotations_latest.tsv.gz",
                    "hidden": true
                },
                "camper_hmm_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/camper/hmm/",
                    "hidden": true
                },
                "camper_hmm_list": {
                    "type": "string",
                    "default": "${launchDir}/databases/camper/hmm/camper_hmm_scores.tsv",
                    "hidden": true
                },
                "camper_mmseqs_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/camper/mmseqs/",
                    "hidden": true
                },
                "camper_mmseqs_list": {
                    "type": "string",
                    "default": "${launchDir}/databases/camper/mmseqs/camper_scores.tsv",
                    "hidden": true
                },
                "canthyd_hmm_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/canthyd/hmm/",
                    "hidden": true
                },
                "cant_hyd_hmm_list": {
                    "type": "string",
                    "default": "${launchDir}/databases/canthyd/hmm/cant_hyd_HMM_scores.tsv",
                    "hidden": true
                },
                "canthyd_mmseqs_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/canthyd/mmseqs/",
                    "hidden": true
                },
                "canthyd_mmseqs_list": {
                    "type": "string",
                    "default": "${launchDir}/databases/canthyd/mmseqs/cant_hyd_BLAST_scores.tsv",
                    "hidden": true
                },
                "fegenie_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/fegenie/",
                    "hidden": true
                },
                "fegenie_list": {
                    "type": "string",
                    "default": "${launchDir}/databases/fegenie/fegenie_iron_cut_offs.txt",
                    "hidden": true
                },
                "sulfur_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/sulfur/",
                    "hidden": true
                },
                "methyl_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/methyl/",
                    "hidden": true
                },
                "sql_descriptions_db": {
                    "type": "string",
                    "default": "${launchDir}/databases/db_descriptions/description_db.sqlite",
                    "hidden": true
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "threads": {
                    "type": "integer",
                    "default": 10,
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true,
                    "default": "yyyy-MM-dd_HH-mm-ssZ"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/genome_options"
        },
        {
            "$ref": "#/$defs/call_prodigal_options"
        },
        {
            "$ref": "#/$defs/annotate_options"
        },
        {
            "$ref": "#/$defs/distill_options"
        },
        {
            "$ref": "#/$defs/rna_options"
        },
        {
            "$ref": "#/$defs/bin_and_taxa_options"
        },
        {
            "$ref": "#/$defs/database_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        },
        {
            "required": [
                "input_fasta",
                "outdir"
            ]
        },
        {
            "oneOf": [
                {
                    "required": [
                        "call"
                    ],
                    "not": {
                        "required": [
                            "input_genes"
                        ]
                    }
                },
                {
                    "required": [
                        "input_genes",
                        "annotate"
                    ],
                    "not": {
                        "required": [
                            "call"
                        ]
                    }
                },
                {
                    "allOf": [
                        {
                            "not": {
                                "required": [
                                    "call"
                                ]
                            }
                        },
                        {
                            "not": {
                                "required": [
                                    "input_genes"
                                ]
                            }
                        }
                    ]
                }
            ]
        },
        {
            "oneOf": [
                {
                    "required": [
                        "call"
                    ],
                    "not": {
                        "required": [
                            "trnas",
                            "rrnas"
                        ]
                    }
                },
                {
                    "required": [
                        "trnas",
                        "rrnas"
                    ],
                    "not": {
                        "required": [
                            "call"
                        ]
                    }
                },
                {
                    "allOf": [
                        {
                            "not": {
                                "required": [
                                    "call"
                                ]
                            }
                        },
                        {
                            "not": {
                                "required": [
                                    "trnas",
                                ]
                            }
                        },
                        {
                            "not": {
                                "required": [
                                    "rrnas"
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    ]
}